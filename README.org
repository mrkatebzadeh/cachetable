#+AUTHOR:    M.R. Siavash Katebzadeh
#+EMAIL:     (concat "mr" at-sign "katebzadeh.xyz")
#+LANGUAGE:  en
#+OPTIONS:   H:4 num:nil toc:nil p:t

* CacheTable

~cachetable~ is a high-performance and lock-free lossy hash table designed for low-latency workloads.

** Usage

To include ~cachetable~ in your project, add it to your `Cargo.toml` from the GitHub repository:

#+begin_src toml
[dependencies]
cachetable = { git = "https://github.com/mrkatebzadeh/cachetable.git" }
#+end_src

** Example

Hereâ€™s a simple example demonstrating how to use the ~cachetable~ crate for a key-value storage:

#+BEGIN_SRC rust
use cachetable::{CacheKey, CacheTable, CacheValue};

fn main() {
    let key = CacheKey::new(10);
    let value = CacheValue::new(&[10]);
    let mut ctable = CacheTable::<4 /* Log size */, 32 /* Bucket size*/>::new();

    ctable.insert(key, value);
}
#+END_SRC

** TODO
- [x] Implement retrieval of a key-value pair from the cache table.
- [ ] Implement different policies for eviction.
